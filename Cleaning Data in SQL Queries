--Cleaning Data in SQL Queries



SELECT * 
From PortfolioProject.dbo.NashvilleHousing

--Standardize Date Format

SELECT SaleDateConverted, CONVERT(date,saledate)
From PortfolioProject.dbo.NashvilleHousing

Update NashvilleHousing
Set SaleDate = CONVERT(date,saledate)

Alter table NashvilleHousing
Add SaleDateConverted Date;

Update NashvilleHousing
Set SaleDateConverted = CONVERT(date,saledate)

------------------------------------------------------------------------------------------
--Populate Property Address data

SELECT *
From PortfolioProject.dbo.NashvilleHousing
--where propertyaddress is null
order by parcelid

SELECT a.parcelid, a.propertyaddress, b.parcelid, b.propertyaddress, ISNULL(a.propertyaddress, b.PropertyAddress)
From PortfolioProject.dbo.NashvilleHousing a
Join PortfolioProject.dbo.NashvilleHousing b
ON a.parcelId = b.parcelId
and a.[UniqueID ] <> b.[UniqueID ]
--where a.propertyaddress is null

Update a
Set propertyaddress = ISNULL(a.propertyaddress, b.PropertyAddress)	
From PortfolioProject.dbo.NashvilleHousing a
Join PortfolioProject.dbo.NashvilleHousing b
ON a.parcelId = b.parcelId
and a.[UniqueID ] <> b.[UniqueID ]
where a.propertyaddress is null

----------------------------------------------------------------------------

--Breaking out Address into individuals colums (Address, City, State)

SELECT PropertyAddress
From PortfolioProject.dbo.NashvilleHousing


Select
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1) as Address
,  SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1, LEN(PropertyAddress)) as Address


From PortfolioProject.dbo.NashvilleHousing

Alter table PortfolioProject.dbo.NashvilleHousing
Add PropertySplitAddress Nvarchar(255);

Update PortfolioProject.dbo.NashvilleHousing
Set PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1) 

Alter table PortfolioProject.dbo.NashvilleHousing
Add PropertySplitCity Nvarchar(255);

Update PortfolioProject.dbo.NashvilleHousing
Set PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1, LEN(PropertyAddress))

Select *
From PortfolioProject.dbo.NashvilleHousing



Select OwnerAddress
From PortfolioProject.dbo.NashvilleHousing

	Select
	Parsename (REPLACE(OwnerAddress, ',', '.') , 3) 
	,Parsename (REPLACE(OwnerAddress, ',', '.') , 2) 
	,Parsename (REPLACE(OwnerAddress, ',', '.') , 1) 
	From PortfolioProject.dbo.NashvilleHousing



	Alter table PortfolioProject.dbo.NashvilleHousing
Add OwnerSplitAddress Nvarchar(255);

Update PortfolioProject.dbo.NashvilleHousing
Set OwnerSplitAddress = Parsename (REPLACE(OwnerAddress, ',', '.') , 3) 

Alter table PortfolioProject.dbo.NashvilleHousing
Add OwnerSplitCity Nvarchar(255);

Update PortfolioProject.dbo.NashvilleHousing
Set OwnerSplitCity = Parsename (REPLACE(OwnerAddress, ',', '.') , 2) 

Alter table PortfolioProject.dbo.NashvilleHousing
Add OwnerSplitState Nvarchar(255);

Update PortfolioProject.dbo.NashvilleHousing
Set OwnerSplitState = Parsename (REPLACE(OwnerAddress, ',', '.') , 1) 

Select *
From PortfolioProject.dbo.NashvilleHousing


-------------------------------------------------------------------------------

-- Change Y and N to Yes and No in "Sold as Vacant" field

Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From PortfolioProject.dbo.NashvilleHousing
Group By SoldAsVacant
Order by 2


Select SoldAsVacant
,Case When SoldAsVacant = 'Y' then 'Yes'
	When SoldAsVacant = 'N' then 'No'
	Else SoldAsVacant
	End

From PortfolioProject.dbo.NashvilleHousing

Update PortfolioProject.dbo.NashvilleHousing
Set SoldAsVacant = Case When SoldAsVacant = 'Y' then 'Yes'
	When SoldAsVacant = 'N' then 'No'
	Else SoldAsVacant
	End


	----------------------------------------------------------------------------------------

	-- Remove Duplicates

	With RowNumCTE as(
	Select *,
		Row_Number() Over (
		Partition By ParcelID,
					PropertyAddress,
					SalePrice,
					SaleDate,
					LegalReference
					Order by 
						UniqueID
						) row_num
						
	From PortfolioProject.dbo.NashvilleHousing
	--Order by ParcelID
	)

	--Delete
	--From RowNumCTE
	--where row_num > 1


		Select *
	From RowNumCTE
	where row_num 
	order by PropertyAddress


	---------------------------------------------------------------------

	--Delete Unused Columns

	Select *
From PortfolioProject.dbo.NashvilleHousing

Alter Table PortfolioProject.dbo.NashvilleHousing
Drop Column OwnerAddress, TaxDistrict, PropertyAddress

Alter Table PortfolioProject.dbo.NashvilleHousing
Drop Column SaleDate
